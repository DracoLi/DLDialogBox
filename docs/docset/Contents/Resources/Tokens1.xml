<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/CCScale9Sprite.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/CCScale9Sprite</TokenIdentifier>
			<Abstract type="html">A 9-slice sprite for cocos2d.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
            <Availability type="html"></Availability>
			
			<NodeRef refid="1"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setOriginalSize:</TokenIdentifier>
			<Abstract type="html">Original sprite&apos;s size.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CGSize originalSize</Declaration>
			
			
			<Anchor>//api/name/originalSize</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/originalSize</TokenIdentifier>
			<Abstract type="html">Original sprite&apos;s size.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CGSize originalSize</Declaration>
			
			
			<Anchor>//api/name/originalSize</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/originalSize</TokenIdentifier>
			<Abstract type="html">Original sprite&apos;s size.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CGSize originalSize</Declaration>
			
			
			<Anchor>//api/name/originalSize</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setPreferredSize:</TokenIdentifier>
			<Abstract type="html">Preferred sprite&apos;s size. By default the preferred size is the original size.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGSize preferredSize</Declaration>
			
			
			<Anchor>//api/name/preferredSize</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/preferredSize</TokenIdentifier>
			<Abstract type="html">Preferred sprite&apos;s size. By default the preferred size is the original size.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGSize preferredSize</Declaration>
			
			
			<Anchor>//api/name/preferredSize</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/preferredSize</TokenIdentifier>
			<Abstract type="html">Preferred sprite&apos;s size. By default the preferred size is the original size.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) CGSize preferredSize</Declaration>
			
			
			<Anchor>//api/name/preferredSize</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setCapInsets:</TokenIdentifier>
			<Abstract type="html">The end-cap insets.
On a non-resizeable sprite, this property is set to CGRectZero; the sprite
does not use end caps and the entire sprite is subject to stretching.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CGRect capInsets</Declaration>
			
			
			<Anchor>//api/name/capInsets</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/capInsets</TokenIdentifier>
			<Abstract type="html">The end-cap insets.
On a non-resizeable sprite, this property is set to CGRectZero; the sprite
does not use end caps and the entire sprite is subject to stretching.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CGRect capInsets</Declaration>
			
			
			<Anchor>//api/name/capInsets</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/capInsets</TokenIdentifier>
			<Abstract type="html">The end-cap insets.
On a non-resizeable sprite, this property is set to CGRectZero; the sprite
does not use end caps and the entire sprite is subject to stretching.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readonly) CGRect capInsets</Declaration>
			
			
			<Anchor>//api/name/capInsets</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setInsetLeft:</TokenIdentifier>
			<Abstract type="html">Sets the left side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetLeft</Declaration>
			
			
			<Anchor>//api/name/insetLeft</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/insetLeft</TokenIdentifier>
			<Abstract type="html">Sets the left side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetLeft</Declaration>
			
			
			<Anchor>//api/name/insetLeft</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/insetLeft</TokenIdentifier>
			<Abstract type="html">Sets the left side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetLeft</Declaration>
			
			
			<Anchor>//api/name/insetLeft</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setInsetTop:</TokenIdentifier>
			<Abstract type="html">Sets the top side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetTop</Declaration>
			
			
			<Anchor>//api/name/insetTop</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/insetTop</TokenIdentifier>
			<Abstract type="html">Sets the top side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetTop</Declaration>
			
			
			<Anchor>//api/name/insetTop</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/insetTop</TokenIdentifier>
			<Abstract type="html">Sets the top side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetTop</Declaration>
			
			
			<Anchor>//api/name/insetTop</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setInsetRight:</TokenIdentifier>
			<Abstract type="html">Sets the right side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetRight</Declaration>
			
			
			<Anchor>//api/name/insetRight</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/insetRight</TokenIdentifier>
			<Abstract type="html">Sets the right side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetRight</Declaration>
			
			
			<Anchor>//api/name/insetRight</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/insetRight</TokenIdentifier>
			<Abstract type="html">Sets the right side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetRight</Declaration>
			
			
			<Anchor>//api/name/insetRight</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setInsetBottom:</TokenIdentifier>
			<Abstract type="html">Sets the bottom side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetBottom</Declaration>
			
			
			<Anchor>//api/name/insetBottom</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/insetBottom</TokenIdentifier>
			<Abstract type="html">Sets the bottom side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetBottom</Declaration>
			
			
			<Anchor>//api/name/insetBottom</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/insetBottom</TokenIdentifier>
			<Abstract type="html">Sets the bottom side inset</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) float insetBottom</Declaration>
			
			
			<Anchor>//api/name/insetBottom</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setOpacity:</TokenIdentifier>
			<Abstract type="html">Conforms to CocosNodeRGBA protocol.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) GLubyte opacity</Declaration>
			
			
			<Anchor>//api/name/opacity</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/opacity</TokenIdentifier>
			<Abstract type="html">Conforms to CocosNodeRGBA protocol.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) GLubyte opacity</Declaration>
			
			
			<Anchor>//api/name/opacity</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/opacity</TokenIdentifier>
			<Abstract type="html">Conforms to CocosNodeRGBA protocol.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) GLubyte opacity</Declaration>
			
			
			<Anchor>//api/name/opacity</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setColor:</TokenIdentifier>
			<Abstract type="html">Conforms to CocosNodeRGBA protocol.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) ccColor3B color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/color</TokenIdentifier>
			<Abstract type="html">Conforms to CocosNodeRGBA protocol.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) ccColor3B color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/color</TokenIdentifier>
			<Abstract type="html">Conforms to CocosNodeRGBA protocol.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, readwrite) ccColor3B color</Declaration>
			
			
			<Anchor>//api/name/color</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setOpacityModifyRGB:</TokenIdentifier>
			<Abstract type="html">Conforms to CocosNodeRGBA protocol.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, getter=doesOpacityModifyRGB) BOOL opacityModifyRGB</Declaration>
			
			
			<Anchor>//api/name/opacityModifyRGB</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/doesOpacityModifyRGB</TokenIdentifier>
			<Abstract type="html">Conforms to CocosNodeRGBA protocol.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, getter=doesOpacityModifyRGB) BOOL opacityModifyRGB</Declaration>
			
			
			<Anchor>//api/name/opacityModifyRGB</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/CCScale9Sprite/opacityModifyRGB</TokenIdentifier>
			<Abstract type="html">Conforms to CocosNodeRGBA protocol.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, getter=doesOpacityModifyRGB) BOOL opacityModifyRGB</Declaration>
			
			
			<Anchor>//api/name/opacityModifyRGB</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithFile:rect:capInsets:</TokenIdentifier>
			<Abstract type="html">Initializes a 9-slice sprite with a texture file, a delimitation zone and
with the specified cap insets.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (id)initWithFile:(NSString *)file rect:(CGRect)rect capInsets:(CGRect)capInsets</Declaration>
			<Parameters>
				<Parameter>
					<Name>file</Name>
					<Abstract type="html">The name of the texture file.</Abstract>
				</Parameter><Parameter>
					<Name>rect</Name>
					<Abstract type="html">The rectangle that describes the sub-part of the texture that
is the whole image. If the shape is the whole texture, set this to the
texture&apos;s full rect.</Abstract>
				</Parameter><Parameter>
					<Name>capInsets</Name>
					<Abstract type="html">The values to use for the cap insets.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithFile:rect:capInsets:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCScale9Sprite/spriteWithFile:rect:capInsets:</TokenIdentifier>
			<Abstract type="html">Creates a 9-slice sprite with a texture file, a delimitation zone and
with the specified cap insets.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>+ (id)spriteWithFile:(NSString *)file rect:(CGRect)rect capInsets:(CGRect)capInsets</Declaration>
			
			
			<Anchor>//api/name/spriteWithFile:rect:capInsets:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithFile:rect:</TokenIdentifier>
			<Abstract type="html">Initializes a 9-slice sprite with a texture file and a delimitation zone. The
texture will be broken down into a 3×3 grid of equal blocks.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (id)initWithFile:(NSString *)file rect:(CGRect)rect</Declaration>
			<Parameters>
				<Parameter>
					<Name>file</Name>
					<Abstract type="html">The name of the texture file.</Abstract>
				</Parameter><Parameter>
					<Name>rect</Name>
					<Abstract type="html">The rectangle that describes the sub-part of the texture that
is the whole image. If the shape is the whole texture, set this to the
texture&apos;s full rect.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithFile:rect:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCScale9Sprite/spriteWithFile:rect:</TokenIdentifier>
			<Abstract type="html">Creates a 9-slice sprite with a texture file and a delimitation zone. The
texture will be broken down into a 3×3 grid of equal blocks.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithFile:rect:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)spriteWithFile:(NSString *)file rect:(CGRect)rect</Declaration>
			
			
			<Anchor>//api/name/spriteWithFile:rect:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithFile:capInsets:</TokenIdentifier>
			<Abstract type="html">Initializes a 9-slice sprite with a texture file and with the specified cap
insets.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (id)initWithFile:(NSString *)file capInsets:(CGRect)capInsets</Declaration>
			<Parameters>
				<Parameter>
					<Name>file</Name>
					<Abstract type="html">The name of the texture file.</Abstract>
				</Parameter><Parameter>
					<Name>capInsets</Name>
					<Abstract type="html">The values to use for the cap insets.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithFile:capInsets:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCScale9Sprite/spriteWithFile:capInsets:</TokenIdentifier>
			<Abstract type="html">Creates a 9-slice sprite with a texture file. The whole texture will be
broken down into a 3×3 grid of equal blocks.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithFile:capInsets:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)spriteWithFile:(NSString *)file capInsets:(CGRect)capInsets</Declaration>
			
			
			<Anchor>//api/name/spriteWithFile:capInsets:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithFile:</TokenIdentifier>
			<Abstract type="html">Initializes a 9-slice sprite with a texture file. The whole texture will be
broken down into a 3×3 grid of equal blocks.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (id)initWithFile:(NSString *)file</Declaration>
			<Parameters>
				<Parameter>
					<Name>file</Name>
					<Abstract type="html">The name of the texture file.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithFile:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCScale9Sprite/spriteWithFile:</TokenIdentifier>
			<Abstract type="html">Creates a 9-slice sprite with a texture file. The whole texture will be
broken down into a 3×3 grid of equal blocks.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithFile:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)spriteWithFile:(NSString *)file</Declaration>
			
			
			<Anchor>//api/name/spriteWithFile:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithSpriteFrame:capInsets:</TokenIdentifier>
			<Abstract type="html">Initializes a 9-slice sprite with an sprite frame and with the specified
cap insets.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (id)initWithSpriteFrame:(CCSpriteFrame *)spriteFrame capInsets:(CGRect)capInsets</Declaration>
			<Parameters>
				<Parameter>
					<Name>spriteFrame</Name>
					<Abstract type="html">The sprite frame object.</Abstract>
				</Parameter><Parameter>
					<Name>capInsets</Name>
					<Abstract type="html">The values to use for the cap insets.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithSpriteFrame:capInsets:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCScale9Sprite/spriteWithSpriteFrame:capInsets:</TokenIdentifier>
			<Abstract type="html">Creates a 9-slice sprite with an sprite frame and the centre of its zone.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>+ (id)spriteWithSpriteFrame:(CCSpriteFrame *)spriteFrame capInsets:(CGRect)capInsets</Declaration>
			
			
			<Anchor>//api/name/spriteWithSpriteFrame:capInsets:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithSpriteFrame:</TokenIdentifier>
			<Abstract type="html">Initializes a 9-slice sprite with an sprite frame.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (id)initWithSpriteFrame:(CCSpriteFrame *)spriteFrame</Declaration>
			<Parameters>
				<Parameter>
					<Name>spriteFrame</Name>
					<Abstract type="html">The sprite frame object.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithSpriteFrame:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCScale9Sprite/spriteWithSpriteFrame:</TokenIdentifier>
			<Abstract type="html">Creates a 9-slice sprite with an sprite frame.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithSpriteFrame:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)spriteWithSpriteFrame:(CCSpriteFrame *)spriteFrame</Declaration>
			
			
			<Anchor>//api/name/spriteWithSpriteFrame:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithSpriteFrameName:capInsets:</TokenIdentifier>
			<Abstract type="html">Initializes a 9-slice sprite with an sprite frame name and with the specified
cap insets.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (id)initWithSpriteFrameName:(NSString *)spriteFrameName capInsets:(CGRect)capInsets</Declaration>
			<Parameters>
				<Parameter>
					<Name>spriteFrameName</Name>
					<Abstract type="html">The sprite frame name.</Abstract>
				</Parameter><Parameter>
					<Name>capInsets</Name>
					<Abstract type="html">The values to use for the cap insets.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithSpriteFrameName:capInsets:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCScale9Sprite/spriteWithSpriteFrameName:capInsets:</TokenIdentifier>
			<Abstract type="html">Creates a 9-slice sprite with an sprite frame name and the centre of its
zone.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>+ (id)spriteWithSpriteFrameName:(NSString *)spriteFrameName capInsets:(CGRect)capInsets</Declaration>
			
			
			<Anchor>//api/name/spriteWithSpriteFrameName:capInsets:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithSpriteFrameName:</TokenIdentifier>
			<Abstract type="html">Initializes a 9-slice sprite with an sprite frame name.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (id)initWithSpriteFrameName:(NSString *)spriteFrameName</Declaration>
			<Parameters>
				<Parameter>
					<Name>spriteFrameName</Name>
					<Abstract type="html">The sprite frame name.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/initWithSpriteFrameName:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/CCScale9Sprite/spriteWithSpriteFrameName:</TokenIdentifier>
			<Abstract type="html">Creates a 9-slice sprite with an sprite frame name.
Once the sprite is created, you can then call its &quot;setContentSize:&quot; method
to resize the sprite will all it&apos;s 9-slice goodness intract.
It respects the anchorPoint too.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/initWithSpriteFrameName:</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>+ (id)spriteWithSpriteFrameName:(NSString *)spriteFrameName</Declaration>
			
			
			<Anchor>//api/name/spriteWithSpriteFrameName:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/resizableSpriteWithCapInsets:</TokenIdentifier>
			<Abstract type="html">Creates and returns a new sprite object with the specified cap insets.
You use this method to add cap insets to a sprite or to change the existing
cap insets of a sprite. In both cases, you get back a new image and the
original sprite remains untouched.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (CCScale9Sprite *)resizableSpriteWithCapInsets:(CGRect)capInsets</Declaration>
			<Parameters>
				<Parameter>
					<Name>capInsets</Name>
					<Abstract type="html">The values to use for the cap insets.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/resizableSpriteWithCapInsets:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/CCScale9Sprite/setSpriteFrame:</TokenIdentifier>
			<Abstract type="html">Sets the sprite frame used to display the 9-slice sprite.</Abstract>
			<DeclaredIn>CCScale9Sprite.h</DeclaredIn>
			
			<Declaration>- (void)setSpriteFrame:(CCSpriteFrame *)spriteFrame</Declaration>
			<Parameters>
				<Parameter>
					<Name>spriteFrame</Name>
					<Abstract type="html">The new sprite frame.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setSpriteFrame:</Anchor>
            <NodeRef refid="1"/>
		</Token>
		
        
	</File>
</Tokens>